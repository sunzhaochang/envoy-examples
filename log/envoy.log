[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:206] initializing epoch 0 (hot restart version=10.200.16384.127.options=capacity=16384, num_slots=8209 hash=228984379728933363 size=2654312)
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:208] statically linked extensions:
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:210]   access_loggers: envoy.file_access_log,envoy.http_grpc_access_log
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:213]   filters.http: envoy.buffer,envoy.cors,envoy.ext_authz,envoy.fault,envoy.filters.http.header_to_metadata,envoy.filters.http.jwt_authn,envoy.filters.http.rbac,envoy.grpc_http1_bridge,envoy.grpc_json_transcoder,envoy.grpc_web,envoy.gzip,envoy.health_check,envoy.http_dynamo_filter,envoy.ip_tagging,envoy.lua,envoy.rate_limit,envoy.router,envoy.squash
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:216]   filters.listener: envoy.listener.original_dst,envoy.listener.proxy_protocol,envoy.listener.tls_inspector
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:219]   filters.network: envoy.client_ssl_auth,envoy.echo,envoy.ext_authz,envoy.filters.network.dubbo_proxy,envoy.filters.network.rbac,envoy.filters.network.sni_cluster,envoy.filters.network.thrift_proxy,envoy.http_connection_manager,envoy.mongo_proxy,envoy.ratelimit,envoy.redis_proxy,envoy.tcp_proxy
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:221]   stat_sinks: envoy.dog_statsd,envoy.metrics_service,envoy.stat_sinks.hystrix,envoy.statsd
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:223]   tracers: envoy.dynamic.ot,envoy.lightstep,envoy.tracers.datadog,envoy.zipkin
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:226]   transport_sockets.downstream: envoy.transport_sockets.alts,envoy.transport_sockets.capture,raw_buffer,tls
[2019-02-27 14:29:14.198][074329][info][main] [source/server/server.cc:229]   transport_sockets.upstream: envoy.transport_sockets.alts,envoy.transport_sockets.capture,raw_buffer,tls
[2019-02-27 14:29:14.201][074329][info][main] [source/server/server.cc:271] admin address: 0.0.0.0:9000
[2019-02-27 14:29:14.201][074329][debug][main] [source/server/overload_manager_impl.cc:171] No overload action configured for envoy.overload_actions.stop_accepting_connections.
[2019-02-27 14:29:14.201][074329][debug][main] [source/server/overload_manager_impl.cc:171] No overload action configured for envoy.overload_actions.stop_accepting_connections.
[2019-02-27 14:29:14.201][074329][debug][main] [source/server/overload_manager_impl.cc:171] No overload action configured for envoy.overload_actions.stop_accepting_connections.
[2019-02-27 14:29:14.201][074329][debug][main] [source/server/overload_manager_impl.cc:171] No overload action configured for envoy.overload_actions.stop_accepting_connections.
[2019-02-27 14:29:14.202][074329][info][config] [source/server/configuration_impl.cc:51] loading 0 static secret(s)
[2019-02-27 14:29:14.202][074329][info][config] [source/server/configuration_impl.cc:57] loading 1 cluster(s)
[2019-02-27 14:29:14.202][074333][debug][grpc] [source/common/grpc/google_async_client_impl.cc:41] completionThread running
[2019-02-27 14:29:14.203][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster xds_cluster
[2019-02-27 14:29:14.203][074329][debug][upstream] [source/common/upstream/upstream_impl.cc:583] initializing secondary cluster xds_cluster completed
[2019-02-27 14:29:14.203][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster xds_cluster
[2019-02-27 14:29:14.203][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:91] cm init: init complete: cluster=xds_cluster primary=0 secondary=0
[2019-02-27 14:29:14.203][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:63] cm init: adding: cluster=xds_cluster primary=0 secondary=0
[2019-02-27 14:29:14.203][074329][info][upstream] [source/common/upstream/cluster_manager_impl.cc:132] cm init: initializing cds
[2019-02-27 14:29:14.203][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:137] gRPC mux subscribe for type.googleapis.com/envoy.api.v2.Cluster
[2019-02-27 14:29:14.203][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:89] No stream available to sendDiscoveryRequest for type.googleapis.com/envoy.api.v2.Cluster
[2019-02-27 14:29:14.203][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamClusters(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:29:14.203][074329][debug][router] [source/common/router/router.cc:264] [C0][S14743565001193997603] cluster 'xds_cluster' match for URL '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
[2019-02-27 14:29:14.203][074329][debug][router] [source/common/router/router.cc:322] [C0][S14743565001193997603] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:29:14.204][074329][debug][client] [source/common/http/codec_client.cc:26] [C0] connecting
[2019-02-27 14:29:14.204][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C0] connecting to 127.0.0.1:18000
[2019-02-27 14:29:14.204][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C0] connection in progress
[2019-02-27 14:29:14.204][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C0] setting stream-level initial window size to 268435456
[2019-02-27 14:29:14.204][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C0] updating connection-level initial window size to 268435456
[2019-02-27 14:29:14.204][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:29:14.204][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamAggregatedResources(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:29:14.204][074329][debug][router] [source/common/router/router.cc:264] [C0][S851086824754779306] cluster 'xds_cluster' match for URL '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
[2019-02-27 14:29:14.204][074329][debug][router] [source/common/router/router.cc:322] [C0][S851086824754779306] router decoding headers:
':method', 'POST'
':path', '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:29:14.204][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:29:14.204][074329][info][config] [source/server/configuration_impl.cc:62] loading 0 listener(s)
[2019-02-27 14:29:14.204][074329][info][config] [source/server/configuration_impl.cc:95] loading tracing configuration
[2019-02-27 14:29:14.204][074329][info][config] [source/server/configuration_impl.cc:115] loading stats sink configuration
[2019-02-27 14:29:14.204][074329][info][main] [source/server/server.cc:457] starting main dispatch loop
[2019-02-27 14:29:14.204][074329][debug][connection] [source/common/network/connection_impl.cc:516] [C0] connected
[2019-02-27 14:29:14.204][074329][debug][client] [source/common/http/codec_client.cc:64] [C0] connected
[2019-02-27 14:29:14.204][074329][debug][pool] [source/common/http/http2/conn_pool.cc:83] [C0] creating stream
[2019-02-27 14:29:14.204][074329][debug][router] [source/common/router/router.cc:1007] [C0][S14743565001193997603] pool ready
[2019-02-27 14:29:14.204][074329][debug][pool] [source/common/http/http2/conn_pool.cc:83] [C0] creating stream
[2019-02-27 14:29:14.204][074329][debug][router] [source/common/router/router.cc:1007] [C0][S851086824754779306] pool ready
[2019-02-27 14:29:14.207][074329][debug][router] [source/common/router/router.cc:609] [C0][S14743565001193997603] upstream headers complete: end_stream=false
[2019-02-27 14:29:14.207][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=false):
':status', '200'
'content-type', 'application/grpc'

[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946309
[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:14.207][074329][info][upstream] [source/common/upstream/cluster_manager_impl.cc:496] add/update cluster serviceA during init
[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:534] adding TLS cluster serviceA
[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/upstream/upstream_impl.cc:583] initializing secondary cluster serviceA completed
[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceA
[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:91] cm init: init complete: cluster=serviceA primary=0 secondary=0
[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:63] cm init: adding: cluster=serviceA primary=0 secondary=0
[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/upstream/cds_api_impl.cc:68] cds: add/update cluster 'serviceA'
[2019-02-27 14:29:14.207][074329][info][upstream] [source/common/upstream/cluster_manager_impl.cc:496] add/update cluster serviceB during init
[2019-02-27 14:29:14.207][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:534] adding TLS cluster serviceB
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/upstream/upstream_impl.cc:583] initializing secondary cluster serviceB completed
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceB
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:91] cm init: init complete: cluster=serviceB primary=0 secondary=0
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:63] cm init: adding: cluster=serviceB primary=0 secondary=0
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/upstream/cds_api_impl.cc:68] cds: add/update cluster 'serviceB'
[2019-02-27 14:29:14.208][074329][info][upstream] [source/common/upstream/cluster_manager_impl.cc:136] cm init: all clusters initialized
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:14.208][074329][info][main] [source/server/server.cc:429] all clusters initialized. initializing init manager
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:137] gRPC mux subscribe for type.googleapis.com/envoy.api.v2.Listener
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:89] No stream available to sendDiscoveryRequest for type.googleapis.com/envoy.api.v2.Listener
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamListeners(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:29:14.208][074329][debug][router] [source/common/router/router.cc:264] [C0][S7199186746568471603] cluster 'xds_cluster' match for URL '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
[2019-02-27 14:29:14.208][074329][debug][router] [source/common/router/router.cc:322] [C0][S7199186746568471603] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:29:14.208][074329][debug][pool] [source/common/http/http2/conn_pool.cc:83] [C0] creating stream
[2019-02-27 14:29:14.208][074329][debug][router] [source/common/router/router.cc:1007] [C0][S7199186746568471603] pool ready
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:14.208][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:14.208][074329][debug][router] [source/common/router/router.cc:609] [C0][S7199186746568471603] upstream headers complete: end_stream=false
[2019-02-27 14:29:14.208][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=false):
':status', '200'
'content-type', 'application/grpc'

[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946309
[2019-02-27 14:29:14.208][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:14.208][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:14.209][074329][debug][config] [source/server/listener_manager_impl.cc:40]   filter #0:
[2019-02-27 14:29:14.209][074329][debug][config] [source/server/listener_manager_impl.cc:41]     name: envoy.http_connection_manager
[2019-02-27 14:29:14.209][074329][debug][config] [source/server/listener_manager_impl.cc:44]   config: {"http_filters":[{"config":{"domain":"envoy"},"name":"envoy.rate_limit"},{"name":"envoy.router"}],"stat_prefix":"ingress_http","route_config":{"virtual_hosts":[{"routes":[{"match":{"regex":"/a"},"route":{"prefix_rewrite":"/","cluster":"serviceA"}},{"route":{"cluster":"serviceB","prefix_rewrite":"/"},"match":{"regex":"/b"}}],"domains":["*"],"rate_limits":[{"actions":[{"destination_cluster":{}}]}],"name":"local_service"}],"name":"local_route"}}
[2019-02-27 14:29:14.210][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:298]     http filter #0
[2019-02-27 14:29:14.210][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:299]       name: envoy.rate_limit
[2019-02-27 14:29:14.210][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:303]     config: {"domain":"envoy"}
[2019-02-27 14:29:14.210][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:298]     http filter #1
[2019-02-27 14:29:14.210][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:299]       name: envoy.router
[2019-02-27 14:29:14.210][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:303]     config: {}
[2019-02-27 14:29:14.211][074329][debug][config] [source/server/listener_manager_impl.cc:527] add active listener: name=listener_0, hash=6523385316356222964, address=127.0.0.1:10000
[2019-02-27 14:29:14.211][074329][info][upstream] [source/server/lds_api.cc:80] lds: add/update listener 'listener_0'
[2019-02-27 14:29:14.211][074329][info][config] [source/server/listener_manager_impl.cc:910] all dependencies initialized. starting workers
[2019-02-27 14:29:14.211][074335][debug][main] [source/server/worker_impl.cc:98] worker entering dispatch loop
[2019-02-27 14:29:14.211][074335][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster serviceA
[2019-02-27 14:29:14.211][074337][debug][grpc] [source/common/grpc/google_async_client_impl.cc:41] completionThread running
[2019-02-27 14:29:14.211][074335][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster serviceB
[2019-02-27 14:29:14.211][074335][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster xds_cluster
[2019-02-27 14:29:14.211][074335][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster xds_cluster
[2019-02-27 14:29:14.211][074335][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:532] updating TLS cluster serviceA
[2019-02-27 14:29:14.211][074335][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceA
[2019-02-27 14:29:14.211][074335][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:532] updating TLS cluster serviceB
[2019-02-27 14:29:14.211][074335][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceB
[2019-02-27 14:29:14.212][074338][debug][main] [source/server/worker_impl.cc:98] worker entering dispatch loop
[2019-02-27 14:29:14.212][074336][debug][main] [source/server/worker_impl.cc:98] worker entering dispatch loop
[2019-02-27 14:29:14.212][074338][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster serviceA
[2019-02-27 14:29:14.212][074339][debug][grpc] [source/common/grpc/google_async_client_impl.cc:41] completionThread running
[2019-02-27 14:29:14.213][074338][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster serviceB
[2019-02-27 14:29:14.213][074336][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster serviceA
[2019-02-27 14:29:14.214][074336][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster serviceB
[2019-02-27 14:29:14.214][074336][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster xds_cluster
[2019-02-27 14:29:14.214][074336][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster xds_cluster
[2019-02-27 14:29:14.214][074336][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:532] updating TLS cluster serviceA
[2019-02-27 14:29:14.214][074336][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceA
[2019-02-27 14:29:14.214][074336][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:532] updating TLS cluster serviceB
[2019-02-27 14:29:14.214][074336][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceB
[2019-02-27 14:29:14.213][074338][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster xds_cluster
[2019-02-27 14:29:14.213][074340][debug][grpc] [source/common/grpc/google_async_client_impl.cc:41] completionThread running
[2019-02-27 14:29:14.213][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:14.213][074341][debug][main] [source/server/worker_impl.cc:98] worker entering dispatch loop
[2019-02-27 14:29:14.217][074341][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster serviceA
[2019-02-27 14:29:14.217][074341][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster serviceB
[2019-02-27 14:29:14.217][074341][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:817] adding TLS initial cluster xds_cluster
[2019-02-27 14:29:14.217][074341][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster xds_cluster
[2019-02-27 14:29:14.217][074341][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:532] updating TLS cluster serviceA
[2019-02-27 14:29:14.217][074341][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceA
[2019-02-27 14:29:14.217][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:14.217][074341][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:532] updating TLS cluster serviceB
[2019-02-27 14:29:14.217][074341][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceB
[2019-02-27 14:29:14.217][074342][debug][grpc] [source/common/grpc/google_async_client_impl.cc:41] completionThread running
[2019-02-27 14:29:14.217][074338][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster xds_cluster
[2019-02-27 14:29:14.217][074338][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:532] updating TLS cluster serviceA
[2019-02-27 14:29:14.217][074338][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceA
[2019-02-27 14:29:14.217][074338][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:532] updating TLS cluster serviceB
[2019-02-27 14:29:14.217][074338][debug][upstream] [source/common/upstream/cluster_manager_impl.cc:952] membership update for TLS cluster serviceB
[2019-02-27 14:29:14.564][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946310
[2019-02-27 14:29:14.564][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:14.564][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:14.564][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:14.564][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946310
[2019-02-27 14:29:14.564][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:14.564][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:14.564][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:14.564][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:14.564][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:14.564][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:19.205][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:19.565][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946311
[2019-02-27 14:29:19.565][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:19.565][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:19.565][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:19.565][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:19.565][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:19.565][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:19.565][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946311
[2019-02-27 14:29:19.565][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:19.566][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:19.566][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:24.210][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:24.573][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946312
[2019-02-27 14:29:24.573][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:24.573][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:24.573][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:24.573][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946312
[2019-02-27 14:29:24.573][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:24.573][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:24.573][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:24.573][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:24.573][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:24.573][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:29.226][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:29.573][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946313
[2019-02-27 14:29:29.576][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:29.576][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:29.576][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:29.576][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:29.576][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:29.576][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:29.576][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946313
[2019-02-27 14:29:29.576][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:29.576][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:29.576][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:34.229][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:34.574][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946314
[2019-02-27 14:29:34.575][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:34.575][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:34.575][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:34.575][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946314
[2019-02-27 14:29:34.575][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:34.575][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:34.575][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:34.575][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:34.575][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:34.575][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:39.230][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:39.575][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946315
[2019-02-27 14:29:39.575][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:39.575][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:39.575][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:39.575][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:39.575][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:39.576][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:39.576][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946315
[2019-02-27 14:29:39.576][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:39.576][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:39.576][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:44.231][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:44.577][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946316
[2019-02-27 14:29:44.577][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:44.577][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:44.577][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:44.577][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:44.577][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:44.577][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:44.577][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946316
[2019-02-27 14:29:44.577][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:44.577][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:44.577][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:49.232][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:49.579][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946317
[2019-02-27 14:29:49.579][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:49.579][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:49.579][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:49.579][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946317
[2019-02-27 14:29:49.579][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:49.579][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:49.579][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:49.579][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:49.579][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:49.579][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:54.232][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:54.582][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946318
[2019-02-27 14:29:54.582][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:54.582][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:54.582][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:29:54.582][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946318
[2019-02-27 14:29:54.582][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:54.582][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:54.582][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:54.582][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:54.582][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:54.582][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:59.233][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:29:59.585][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946319
[2019-02-27 14:29:59.585][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:59.585][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:29:59.585][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:29:59.585][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:29:59.585][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:29:59.585][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:29:59.585][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946319
[2019-02-27 14:29:59.585][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:59.585][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:29:59.585][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:04.234][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:04.584][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946320
[2019-02-27 14:30:04.584][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:04.584][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:04.584][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:04.584][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946320
[2019-02-27 14:30:04.584][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:04.584][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:30:04.584][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:04.584][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:04.584][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:04.584][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:09.235][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:09.588][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946321
[2019-02-27 14:30:09.588][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:09.588][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:30:09.588][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:09.588][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:09.588][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:09.588][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:09.588][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946321
[2019-02-27 14:30:09.588][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:09.588][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:09.588][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:14.236][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:14.592][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 946322
[2019-02-27 14:30:14.592][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:14.592][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:14.592][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:14.592][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 946322
[2019-02-27 14:30:14.592][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:14.592][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=6523385316356222964
[2019-02-27 14:30:14.592][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:14.592][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:14.592][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:14.592][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "config"
                  value {
                    struct_value {
                      fields {
                        key: "domain"
                        value {
                          string_value: "envoy"
                        }
                      }
                    }
                  }
                }
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.rate_limit"
                  }
                }
              }
            }
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "rate_limits"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "actions"
                                  value {
                                    list_value {
                                      values {
                                        struct_value {
                                          fields {
                                            key: "destination_cluster"
                                            value {
                                              struct_value {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:15.870][074329][debug][connection] [source/common/network/connection_impl.cc:501] [C0] remote close
[2019-02-27 14:30:15.870][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C0] closing socket: 0
[2019-02-27 14:30:15.870][074329][debug][client] [source/common/http/codec_client.cc:82] [C0] disconnect. resetting 3 pending requests
[2019-02-27 14:30:15.870][074329][debug][client] [source/common/http/codec_client.cc:105] [C0] request reset
[2019-02-27 14:30:15.870][074329][debug][pool] [source/common/http/http2/conn_pool.cc:222] [C0] destroying stream: 2 remaining
[2019-02-27 14:30:15.870][074329][debug][router] [source/common/router/router.cc:475] [C0][S7199186746568471603] upstream reset
[2019-02-27 14:30:15.870][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 13, 
[2019-02-27 14:30:15.870][074329][debug][client] [source/common/http/codec_client.cc:105] [C0] request reset
[2019-02-27 14:30:15.871][074329][debug][pool] [source/common/http/http2/conn_pool.cc:222] [C0] destroying stream: 1 remaining
[2019-02-27 14:30:15.871][074329][debug][router] [source/common/router/router.cc:475] [C0][S851086824754779306] upstream reset
[2019-02-27 14:30:15.871][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:15.871][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:15.871][074329][debug][client] [source/common/http/codec_client.cc:105] [C0] request reset
[2019-02-27 14:30:15.871][074329][debug][pool] [source/common/http/http2/conn_pool.cc:222] [C0] destroying stream: 0 remaining
[2019-02-27 14:30:15.871][074329][debug][router] [source/common/router/router.cc:475] [C0][S14743565001193997603] upstream reset
[2019-02-27 14:30:15.871][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 13, 
[2019-02-27 14:30:15.871][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C0] client disconnected
[2019-02-27 14:30:15.871][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C0] destroying primary client
[2019-02-27 14:30:16.071][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamListeners(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:16.071][074329][debug][router] [source/common/router/router.cc:264] [C0][S6080726133554394916] cluster 'xds_cluster' match for URL '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
[2019-02-27 14:30:16.071][074329][debug][router] [source/common/router/router.cc:322] [C0][S6080726133554394916] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:16.071][074329][debug][client] [source/common/http/codec_client.cc:26] [C1] connecting
[2019-02-27 14:30:16.071][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C1] connecting to 127.0.0.1:18000
[2019-02-27 14:30:16.071][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C1] connection in progress
[2019-02-27 14:30:16.071][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C1] setting stream-level initial window size to 268435456
[2019-02-27 14:30:16.071][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C1] updating connection-level initial window size to 268435456
[2019-02-27 14:30:16.071][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:16.071][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C1] delayed connection error: 111
[2019-02-27 14:30:16.071][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C1] closing socket: 0
[2019-02-27 14:30:16.071][074329][debug][client] [source/common/http/codec_client.cc:82] [C1] disconnect. resetting 0 pending requests
[2019-02-27 14:30:16.071][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C1] client disconnected
[2019-02-27 14:30:16.071][074329][debug][router] [source/common/router/router.cc:475] [C0][S6080726133554394916] upstream reset
[2019-02-27 14:30:16.071][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:16.071][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:16.071][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C1] destroying primary client
[2019-02-27 14:30:16.287][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamAggregatedResources(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:16.287][074329][debug][router] [source/common/router/router.cc:264] [C0][S6452766433035778970] cluster 'xds_cluster' match for URL '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
[2019-02-27 14:30:16.287][074329][debug][router] [source/common/router/router.cc:322] [C0][S6452766433035778970] router decoding headers:
':method', 'POST'
':path', '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:16.287][074329][debug][client] [source/common/http/codec_client.cc:26] [C2] connecting
[2019-02-27 14:30:16.287][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C2] connecting to 127.0.0.1:18000
[2019-02-27 14:30:16.287][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C2] connection in progress
[2019-02-27 14:30:16.287][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C2] setting stream-level initial window size to 268435456
[2019-02-27 14:30:16.287][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C2] updating connection-level initial window size to 268435456
[2019-02-27 14:30:16.287][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:16.287][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C2] delayed connection error: 111
[2019-02-27 14:30:16.287][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C2] closing socket: 0
[2019-02-27 14:30:16.287][074329][debug][client] [source/common/http/codec_client.cc:82] [C2] disconnect. resetting 0 pending requests
[2019-02-27 14:30:16.287][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C2] client disconnected
[2019-02-27 14:30:16.287][074329][debug][router] [source/common/router/router.cc:475] [C0][S6452766433035778970] upstream reset
[2019-02-27 14:30:16.287][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:16.287][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:16.287][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C2] destroying primary client
[2019-02-27 14:30:16.367][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamClusters(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:16.367][074329][debug][router] [source/common/router/router.cc:264] [C0][S16256501561280019332] cluster 'xds_cluster' match for URL '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
[2019-02-27 14:30:16.367][074329][debug][router] [source/common/router/router.cc:322] [C0][S16256501561280019332] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:16.367][074329][debug][client] [source/common/http/codec_client.cc:26] [C3] connecting
[2019-02-27 14:30:16.367][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C3] connecting to 127.0.0.1:18000
[2019-02-27 14:30:16.367][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C3] connection in progress
[2019-02-27 14:30:16.367][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C3] setting stream-level initial window size to 268435456
[2019-02-27 14:30:16.367][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C3] updating connection-level initial window size to 268435456
[2019-02-27 14:30:16.367][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:16.367][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C3] delayed connection error: 111
[2019-02-27 14:30:16.367][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C3] closing socket: 0
[2019-02-27 14:30:16.367][074329][debug][client] [source/common/http/codec_client.cc:82] [C3] disconnect. resetting 0 pending requests
[2019-02-27 14:30:16.367][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C3] client disconnected
[2019-02-27 14:30:16.367][074329][debug][router] [source/common/router/router.cc:475] [C0][S16256501561280019332] upstream reset
[2019-02-27 14:30:16.367][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:16.367][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:16.367][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C3] destroying primary client
[2019-02-27 14:30:16.931][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamListeners(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:16.931][074329][debug][router] [source/common/router/router.cc:264] [C0][S6336385739628350711] cluster 'xds_cluster' match for URL '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
[2019-02-27 14:30:16.931][074329][debug][router] [source/common/router/router.cc:322] [C0][S6336385739628350711] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:16.931][074329][debug][client] [source/common/http/codec_client.cc:26] [C4] connecting
[2019-02-27 14:30:16.931][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C4] connecting to 127.0.0.1:18000
[2019-02-27 14:30:16.931][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C4] connection in progress
[2019-02-27 14:30:16.931][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C4] setting stream-level initial window size to 268435456
[2019-02-27 14:30:16.931][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C4] updating connection-level initial window size to 268435456
[2019-02-27 14:30:16.931][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:16.931][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C4] delayed connection error: 111
[2019-02-27 14:30:16.931][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C4] closing socket: 0
[2019-02-27 14:30:16.931][074329][debug][client] [source/common/http/codec_client.cc:82] [C4] disconnect. resetting 0 pending requests
[2019-02-27 14:30:16.931][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C4] client disconnected
[2019-02-27 14:30:16.931][074329][debug][router] [source/common/router/router.cc:475] [C0][S6336385739628350711] upstream reset
[2019-02-27 14:30:16.931][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:16.931][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:16.931][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C4] destroying primary client
[2019-02-27 14:30:17.285][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamAggregatedResources(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:17.285][074329][debug][router] [source/common/router/router.cc:264] [C0][S11728172473262070839] cluster 'xds_cluster' match for URL '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
[2019-02-27 14:30:17.285][074329][debug][router] [source/common/router/router.cc:322] [C0][S11728172473262070839] router decoding headers:
':method', 'POST'
':path', '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:17.285][074329][debug][client] [source/common/http/codec_client.cc:26] [C5] connecting
[2019-02-27 14:30:17.285][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C5] connecting to 127.0.0.1:18000
[2019-02-27 14:30:17.285][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C5] connection in progress
[2019-02-27 14:30:17.285][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C5] setting stream-level initial window size to 268435456
[2019-02-27 14:30:17.285][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C5] updating connection-level initial window size to 268435456
[2019-02-27 14:30:17.285][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:17.285][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C5] delayed connection error: 111
[2019-02-27 14:30:17.285][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C5] closing socket: 0
[2019-02-27 14:30:17.285][074329][debug][client] [source/common/http/codec_client.cc:82] [C5] disconnect. resetting 0 pending requests
[2019-02-27 14:30:17.285][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C5] client disconnected
[2019-02-27 14:30:17.285][074329][debug][router] [source/common/router/router.cc:475] [C0][S11728172473262070839] upstream reset
[2019-02-27 14:30:17.285][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:17.285][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:17.285][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C5] destroying primary client
[2019-02-27 14:30:17.553][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamClusters(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:17.553][074329][debug][router] [source/common/router/router.cc:264] [C0][S11102499641234201743] cluster 'xds_cluster' match for URL '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
[2019-02-27 14:30:17.553][074329][debug][router] [source/common/router/router.cc:322] [C0][S11102499641234201743] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:17.553][074329][debug][client] [source/common/http/codec_client.cc:26] [C6] connecting
[2019-02-27 14:30:17.553][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C6] connecting to 127.0.0.1:18000
[2019-02-27 14:30:17.553][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C6] connection in progress
[2019-02-27 14:30:17.553][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C6] setting stream-level initial window size to 268435456
[2019-02-27 14:30:17.553][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C6] updating connection-level initial window size to 268435456
[2019-02-27 14:30:17.553][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:17.553][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C6] delayed connection error: 111
[2019-02-27 14:30:17.553][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C6] closing socket: 0
[2019-02-27 14:30:17.553][074329][debug][client] [source/common/http/codec_client.cc:82] [C6] disconnect. resetting 0 pending requests
[2019-02-27 14:30:17.553][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C6] client disconnected
[2019-02-27 14:30:17.553][074329][debug][router] [source/common/router/router.cc:475] [C0][S11102499641234201743] upstream reset
[2019-02-27 14:30:17.553][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:17.553][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:17.553][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C6] destroying primary client
[2019-02-27 14:30:17.657][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamAggregatedResources(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:17.657][074329][debug][router] [source/common/router/router.cc:264] [C0][S12467389416439133540] cluster 'xds_cluster' match for URL '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
[2019-02-27 14:30:17.657][074329][debug][router] [source/common/router/router.cc:322] [C0][S12467389416439133540] router decoding headers:
':method', 'POST'
':path', '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:17.658][074329][debug][client] [source/common/http/codec_client.cc:26] [C7] connecting
[2019-02-27 14:30:17.658][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C7] connecting to 127.0.0.1:18000
[2019-02-27 14:30:17.658][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C7] connection in progress
[2019-02-27 14:30:17.658][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C7] setting stream-level initial window size to 268435456
[2019-02-27 14:30:17.658][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C7] updating connection-level initial window size to 268435456
[2019-02-27 14:30:17.658][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:17.658][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C7] delayed connection error: 111
[2019-02-27 14:30:17.658][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C7] closing socket: 0
[2019-02-27 14:30:17.658][074329][debug][client] [source/common/http/codec_client.cc:82] [C7] disconnect. resetting 0 pending requests
[2019-02-27 14:30:17.658][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C7] client disconnected
[2019-02-27 14:30:17.658][074329][debug][router] [source/common/router/router.cc:475] [C0][S12467389416439133540] upstream reset
[2019-02-27 14:30:17.658][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:17.658][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:17.658][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C7] destroying primary client
[2019-02-27 14:30:18.292][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamListeners(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:18.292][074329][debug][router] [source/common/router/router.cc:264] [C0][S7308439462048033120] cluster 'xds_cluster' match for URL '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
[2019-02-27 14:30:18.292][074329][debug][router] [source/common/router/router.cc:322] [C0][S7308439462048033120] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:18.292][074329][debug][client] [source/common/http/codec_client.cc:26] [C8] connecting
[2019-02-27 14:30:18.292][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C8] connecting to 127.0.0.1:18000
[2019-02-27 14:30:18.292][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C8] connection in progress
[2019-02-27 14:30:18.292][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C8] setting stream-level initial window size to 268435456
[2019-02-27 14:30:18.292][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C8] updating connection-level initial window size to 268435456
[2019-02-27 14:30:18.292][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:18.292][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C8] delayed connection error: 111
[2019-02-27 14:30:18.292][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C8] closing socket: 0
[2019-02-27 14:30:18.292][074329][debug][client] [source/common/http/codec_client.cc:82] [C8] disconnect. resetting 0 pending requests
[2019-02-27 14:30:18.292][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C8] client disconnected
[2019-02-27 14:30:18.292][074329][debug][router] [source/common/router/router.cc:475] [C0][S7308439462048033120] upstream reset
[2019-02-27 14:30:18.292][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:18.292][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:18.292][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C8] destroying primary client
[2019-02-27 14:30:18.530][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamClusters(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:18.530][074329][debug][router] [source/common/router/router.cc:264] [C0][S8786193589051860508] cluster 'xds_cluster' match for URL '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
[2019-02-27 14:30:18.530][074329][debug][router] [source/common/router/router.cc:322] [C0][S8786193589051860508] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:18.530][074329][debug][client] [source/common/http/codec_client.cc:26] [C9] connecting
[2019-02-27 14:30:18.530][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C9] connecting to 127.0.0.1:18000
[2019-02-27 14:30:18.530][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C9] connection in progress
[2019-02-27 14:30:18.530][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C9] setting stream-level initial window size to 268435456
[2019-02-27 14:30:18.530][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C9] updating connection-level initial window size to 268435456
[2019-02-27 14:30:18.530][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:18.530][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C9] delayed connection error: 111
[2019-02-27 14:30:18.530][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C9] closing socket: 0
[2019-02-27 14:30:18.530][074329][debug][client] [source/common/http/codec_client.cc:82] [C9] disconnect. resetting 0 pending requests
[2019-02-27 14:30:18.530][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C9] client disconnected
[2019-02-27 14:30:18.530][074329][debug][router] [source/common/router/router.cc:475] [C0][S8786193589051860508] upstream reset
[2019-02-27 14:30:18.530][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:18.530][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:18.530][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C9] destroying primary client
[2019-02-27 14:30:19.237][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:20.776][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamAggregatedResources(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:20.776][074329][debug][router] [source/common/router/router.cc:264] [C0][S12918262965874610076] cluster 'xds_cluster' match for URL '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
[2019-02-27 14:30:20.776][074329][debug][router] [source/common/router/router.cc:322] [C0][S12918262965874610076] router decoding headers:
':method', 'POST'
':path', '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:20.776][074329][debug][client] [source/common/http/codec_client.cc:26] [C10] connecting
[2019-02-27 14:30:20.776][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C10] connecting to 127.0.0.1:18000
[2019-02-27 14:30:20.776][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C10] connection in progress
[2019-02-27 14:30:20.776][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C10] setting stream-level initial window size to 268435456
[2019-02-27 14:30:20.776][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C10] updating connection-level initial window size to 268435456
[2019-02-27 14:30:20.776][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:20.776][074329][debug][connection] [source/common/network/connection_impl.cc:525] [C10] delayed connection error: 111
[2019-02-27 14:30:20.776][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C10] closing socket: 0
[2019-02-27 14:30:20.776][074329][debug][client] [source/common/http/codec_client.cc:82] [C10] disconnect. resetting 0 pending requests
[2019-02-27 14:30:20.776][074329][debug][pool] [source/common/http/http2/conn_pool.cc:136] [C10] client disconnected
[2019-02-27 14:30:20.776][074329][debug][router] [source/common/router/router.cc:475] [C0][S12918262965874610076] upstream reset
[2019-02-27 14:30:20.776][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=true):
':status', '200'
'content-type', 'application/grpc'
'grpc-status', '14'
'grpc-message', 'upstream connect error or disconnect/reset before headers'

[2019-02-27 14:30:20.776][074329][warning][upstream] [source/common/config/grpc_mux_impl.cc:268] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers
[2019-02-27 14:30:20.776][074329][debug][pool] [source/common/http/http2/conn_pool.cc:160] [C10] destroying primary client
[2019-02-27 14:30:22.369][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamClusters(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:22.370][074329][debug][router] [source/common/router/router.cc:264] [C0][S11221332510076107908] cluster 'xds_cluster' match for URL '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
[2019-02-27 14:30:22.370][074329][debug][router] [source/common/router/router.cc:322] [C0][S11221332510076107908] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ClusterDiscoveryService/StreamClusters'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:22.370][074329][debug][client] [source/common/http/codec_client.cc:26] [C11] connecting
[2019-02-27 14:30:22.370][074329][debug][connection] [source/common/network/connection_impl.cc:634] [C11] connecting to 127.0.0.1:18000
[2019-02-27 14:30:22.370][074329][debug][connection] [source/common/network/connection_impl.cc:643] [C11] connection in progress
[2019-02-27 14:30:22.370][074329][debug][http2] [source/common/http/http2/codec_impl.cc:732] [C11] setting stream-level initial window size to 268435456
[2019-02-27 14:30:22.370][074329][debug][http2] [source/common/http/http2/codec_impl.cc:754] [C11] updating connection-level initial window size to 268435456
[2019-02-27 14:30:22.370][074329][debug][pool] [source/common/http/conn_pool_base.cc:20] queueing request due to no available connections
[2019-02-27 14:30:22.370][074329][debug][connection] [source/common/network/connection_impl.cc:516] [C11] connected
[2019-02-27 14:30:22.370][074329][debug][client] [source/common/http/codec_client.cc:64] [C11] connected
[2019-02-27 14:30:22.370][074329][debug][pool] [source/common/http/http2/conn_pool.cc:83] [C11] creating stream
[2019-02-27 14:30:22.370][074329][debug][router] [source/common/router/router.cc:1007] [C0][S11221332510076107908] pool ready
[2019-02-27 14:30:22.374][074329][debug][router] [source/common/router/router.cc:609] [C0][S11221332510076107908] upstream headers complete: end_stream=false
[2019-02-27 14:30:22.374][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=false):
':status', '200'
'content-type', 'application/grpc'

[2019-02-27 14:30:22.374][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 1
[2019-02-27 14:30:22.374][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:22.374][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:22.374][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:22.895][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamAggregatedResources(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:22.895][074329][debug][router] [source/common/router/router.cc:264] [C0][S16647357966271051728] cluster 'xds_cluster' match for URL '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
[2019-02-27 14:30:22.895][074329][debug][router] [source/common/router/router.cc:322] [C0][S16647357966271051728] router decoding headers:
':method', 'POST'
':path', '/envoy.service.discovery.v2.AggregatedDiscoveryService/StreamAggregatedResources'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:22.895][074329][debug][pool] [source/common/http/http2/conn_pool.cc:83] [C11] creating stream
[2019-02-27 14:30:22.895][074329][debug][router] [source/common/router/router.cc:1007] [C0][S16647357966271051728] pool ready
[2019-02-27 14:30:24.238][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:25.101][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:48] Establishing new gRPC bidi stream for rpc StreamListeners(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);

[2019-02-27 14:30:25.101][074329][debug][router] [source/common/router/router.cc:264] [C0][S10179892440618196749] cluster 'xds_cluster' match for URL '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
[2019-02-27 14:30:25.102][074329][debug][router] [source/common/router/router.cc:322] [C0][S10179892440618196749] router decoding headers:
':method', 'POST'
':path', '/envoy.api.v2.ListenerDiscoveryService/StreamListeners'
':authority', 'xds_cluster'
':scheme', 'http'
'te', 'trailers'
'content-type', 'application/grpc'
'x-envoy-internal', 'true'
'x-forwarded-for', '192.168.0.4'

[2019-02-27 14:30:25.102][074329][debug][pool] [source/common/http/http2/conn_pool.cc:83] [C11] creating stream
[2019-02-27 14:30:25.102][074329][debug][router] [source/common/router/router.cc:1007] [C0][S10179892440618196749] pool ready
[2019-02-27 14:30:25.102][074329][debug][router] [source/common/router/router.cc:609] [C0][S10179892440618196749] upstream headers complete: end_stream=false
[2019-02-27 14:30:25.102][074329][debug][http] [source/common/http/async_client_impl.cc:92] async http request response headers (end_stream=false):
':status', '200'
'content-type', 'application/grpc'

[2019-02-27 14:30:25.103][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 1
[2019-02-27 14:30:25.103][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:25.103][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:30:25.103][074329][debug][config] [source/server/listener_manager_impl.cc:40]   filter #0:
[2019-02-27 14:30:25.103][074329][debug][config] [source/server/listener_manager_impl.cc:41]     name: envoy.http_connection_manager
[2019-02-27 14:30:25.103][074329][debug][config] [source/server/listener_manager_impl.cc:44]   config: {"route_config":{"virtual_hosts":[{"name":"local_service","domains":["*"],"routes":[{"match":{"regex":"/a"},"route":{"prefix_rewrite":"/","cluster":"serviceA"}},{"match":{"regex":"/b"},"route":{"cluster":"serviceB","prefix_rewrite":"/"}}]}],"name":"local_route"},"stat_prefix":"ingress_http","http_filters":[{"name":"envoy.router"}]}
[2019-02-27 14:30:25.103][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:298]     http filter #0
[2019-02-27 14:30:25.103][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:299]       name: envoy.router
[2019-02-27 14:30:25.103][074329][debug][config] [source/extensions/filters/network/http_connection_manager/config.cc:303]     config: {}
[2019-02-27 14:30:25.104][074329][debug][config] [source/server/listener_manager_impl.cc:527] add warming listener: name=listener_0, hash=3726703597410572654, address=127.0.0.1:10000
[2019-02-27 14:30:25.104][074329][debug][config] [source/server/listener_manager_impl.cc:527] warm complete. updating active listener: name=listener_0, hash=3726703597410572654, address=127.0.0.1:10000
[2019-02-27 14:30:25.104][074329][debug][config] [source/server/listener_manager_impl.cc:527] draining listener: name=listener_0, hash=6523385316356222964, address=127.0.0.1:10000
[2019-02-27 14:30:25.104][074329][info][upstream] [source/server/lds_api.cc:80] lds: add/update listener 'listener_0'
[2019-02-27 14:30:25.104][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:25.104][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:27.375][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 2
[2019-02-27 14:30:27.375][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:27.375][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:27.375][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:27.375][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 2
[2019-02-27 14:30:27.375][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:27.375][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:30:27.375][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:27.375][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:27.375][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:27.375][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:29.240][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:32.376][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 3
[2019-02-27 14:30:32.376][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:32.376][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:32.376][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:32.376][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 3
[2019-02-27 14:30:32.376][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:32.376][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:30:32.376][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:32.376][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:32.376][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:32.377][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:34.242][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:37.379][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 4
[2019-02-27 14:30:37.379][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:37.379][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:37.379][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:37.379][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 4
[2019-02-27 14:30:37.379][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:37.379][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:30:37.379][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:37.379][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:37.379][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:37.379][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:39.247][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:42.381][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 5
[2019-02-27 14:30:42.381][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:42.381][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:42.381][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:42.381][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 5
[2019-02-27 14:30:42.381][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:42.381][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:30:42.381][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:42.381][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:42.381][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:42.381][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:44.248][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:47.382][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 6
[2019-02-27 14:30:47.382][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:47.382][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:47.382][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:47.382][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 6
[2019-02-27 14:30:47.382][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:47.382][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:30:47.382][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:47.382][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:47.382][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:47.382][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:49.251][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:52.384][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 7
[2019-02-27 14:30:52.384][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:52.384][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:52.384][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:52.384][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 7
[2019-02-27 14:30:52.384][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:52.384][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:30:52.384][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:52.384][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:52.384][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:52.384][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:54.252][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:30:57.096][074329][debug][main] [source/server/connection_handler_impl.cc:236] [C12] new connection
[2019-02-27 14:30:57.096][074329][debug][http] [source/common/http/conn_manager_impl.cc:200] [C12] new stream
[2019-02-27 14:30:57.096][074329][debug][http] [source/common/http/conn_manager_impl.cc:529] [C12][S17896761424467580200] request headers complete (end_stream=true):
':authority', '127.0.0.1:9000'
':path', '/config_dump'
':method', 'GET'
'user-agent', 'curl/7.29.0'
'accept', '*/*'

[2019-02-27 14:30:57.096][074329][debug][http] [source/common/http/conn_manager_impl.cc:928] [C12][S17896761424467580200] request end stream
[2019-02-27 14:30:57.096][074329][debug][admin] [source/server/http/admin.cc:926] [C12][S17896761424467580200] request complete: path: /config_dump
[2019-02-27 14:30:57.097][074329][debug][http] [source/common/http/conn_manager_impl.cc:1150] [C12][S17896761424467580200] encoding headers via codec (end_stream=false):
':status', '200'
'content-type', 'application/json'
'cache-control', 'no-cache, max-age=0'
'x-content-type-options', 'nosniff'
'date', 'Wed, 27 Feb 2019 06:30:57 GMT'
'server', 'envoy'

[2019-02-27 14:30:57.098][074329][debug][connection] [source/common/network/connection_impl.cc:501] [C12] remote close
[2019-02-27 14:30:57.098][074329][debug][connection] [source/common/network/connection_impl.cc:183] [C12] closing socket: 0
[2019-02-27 14:30:57.098][074329][debug][main] [source/server/connection_handler_impl.cc:68] [C12] adding to cleanup list
[2019-02-27 14:30:57.386][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 8
[2019-02-27 14:30:57.386][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:57.386][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:30:57.386][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:30:57.386][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 8
[2019-02-27 14:30:57.386][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:57.386][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:30:57.386][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:30:57.386][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:30:57.386][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:30:57.386][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:30:59.254][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:31:02.387][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 9
[2019-02-27 14:31:02.387][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:02.387][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:02.387][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:31:02.387][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 9
[2019-02-27 14:31:02.387][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:02.387][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:31:02.387][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:31:02.387][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:31:02.387][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:02.387][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:31:04.255][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:31:07.387][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 10
[2019-02-27 14:31:07.388][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:07.388][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:31:07.388][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:31:07.388][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:31:07.388][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:07.388][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:31:07.388][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 10
[2019-02-27 14:31:07.388][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:07.388][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:07.388][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:31:09.261][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:31:12.389][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 11
[2019-02-27 14:31:12.389][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:12.389][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:12.389][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:31:12.389][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 11
[2019-02-27 14:31:12.389][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:12.389][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:31:12.389][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:31:12.389][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:31:12.389][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:12.389][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:31:14.262][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:31:17.389][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 12
[2019-02-27 14:31:17.389][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:17.389][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:31:17.389][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:31:17.390][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:31:17.390][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:17.390][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:31:17.390][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 12
[2019-02-27 14:31:17.390][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:17.390][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:17.390][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:31:19.267][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:31:22.390][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 13
[2019-02-27 14:31:22.391][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:22.391][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:22.391][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:31:22.391][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 13
[2019-02-27 14:31:22.391][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:22.391][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:31:22.391][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:31:22.391][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:31:22.391][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:22.391][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:31:24.270][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:31:27.392][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 14
[2019-02-27 14:31:27.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:27.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:27.393][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:31:27.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 14
[2019-02-27 14:31:27.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:27.393][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:31:27.393][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:31:27.393][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:31:27.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:27.393][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
[2019-02-27 14:31:29.273][074329][debug][main] [source/server/server.cc:143] flushing stats
[2019-02-27 14:31:32.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Cluster at version 15
[2019-02-27 14:31:32.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:32.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.ClusterLoadAssignment
[2019-02-27 14:31:32.393][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Cluster accepted with 2 resources: [name: "serviceA"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5001
  }
}
, name: "serviceB"
connect_timeout {
  seconds: 2
}
hosts {
  socket_address {
    address: "127.0.0.1"
    port_value: 5002
  }
}
]
[2019-02-27 14:31:32.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:193] Received gRPC message for type.googleapis.com/envoy.api.v2.Listener at version 15
[2019-02-27 14:31:32.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:160] Pausing discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:32.393][074329][debug][config] [source/server/listener_manager_impl.cc:640] begin add/update listener: name=listener_0 hash=3726703597410572654
[2019-02-27 14:31:32.393][074329][debug][config] [source/server/listener_manager_impl.cc:651] duplicate/locked listener 'listener_0'. no add/update
[2019-02-27 14:31:32.393][074329][debug][upstream] [source/server/lds_api.cc:82] lds: add/update listener 'listener_0' skipped
[2019-02-27 14:31:32.393][074329][debug][upstream] [source/common/config/grpc_mux_impl.cc:168] Resuming discovery requests for type.googleapis.com/envoy.api.v2.RouteConfiguration
[2019-02-27 14:31:32.393][074329][debug][config] [bazel-out/k8-opt/bin/source/common/config/_virtual_includes/grpc_mux_subscription_lib/common/config/grpc_mux_subscription_impl.h:60] gRPC config for type.googleapis.com/envoy.api.v2.Listener accepted with 1 resources: [name: "listener_0"
address {
  socket_address {
    address: "127.0.0.1"
    port_value: 10000
  }
}
filter_chains {
  filters {
    name: "envoy.http_connection_manager"
    config {
      fields {
        key: "http_filters"
        value {
          list_value {
            values {
              struct_value {
                fields {
                  key: "name"
                  value {
                    string_value: "envoy.router"
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "route_config"
        value {
          struct_value {
            fields {
              key: "name"
              value {
                string_value: "local_route"
              }
            }
            fields {
              key: "virtual_hosts"
              value {
                list_value {
                  values {
                    struct_value {
                      fields {
                        key: "domains"
                        value {
                          list_value {
                            values {
                              string_value: "*"
                            }
                          }
                        }
                      }
                      fields {
                        key: "name"
                        value {
                          string_value: "local_service"
                        }
                      }
                      fields {
                        key: "routes"
                        value {
                          list_value {
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/a"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceA"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            values {
                              struct_value {
                                fields {
                                  key: "match"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "regex"
                                        value {
                                          string_value: "/b"
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  key: "route"
                                  value {
                                    struct_value {
                                      fields {
                                        key: "cluster"
                                        value {
                                          string_value: "serviceB"
                                        }
                                      }
                                      fields {
                                        key: "prefix_rewrite"
                                        value {
                                          string_value: "/"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      fields {
        key: "stat_prefix"
        value {
          string_value: "ingress_http"
        }
      }
    }
  }
}
]
